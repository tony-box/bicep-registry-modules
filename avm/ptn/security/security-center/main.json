{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "11404777753522968837"
    },
    "name": "Azure Security Center (Defender for Cloud)",
    "description": "This module deploys an Azure Security Center (Defender for Cloud) Configuration.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "pricingsType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "metadata": {
              "description": "Required. The pricing name. Use \"az security pricing list\" to find the latest list of pricing names."
            }
          },
          "pricingTier": {
            "type": "string",
            "allowedValues": [
              "Free",
              "Standard"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. List of extensions offered under a plan."
            }
          },
          "enforce": {
            "type": "string",
            "allowedValues": [
              "False",
              "True"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. If set to \"False\", it allows the descendants of this scope to override the pricing configuration set on this scope (allows setting inherited=\"False\"). If set to \"True\", it prevents overrides and forces this pricing configuration on all the descendants of this scope. This field is only available for subscription-level pricing."
            }
          },
          "extensions": {
            "type": "array",
            "nullable": true,
            "metadata": {
              "description": "Optional. List of extensions offered under a plan."
            }
          },
          "subPlan": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The sub-plan selected for a Standard pricing configuration, when more than one sub-plan is available. Each sub-plan enables a set of security features. When not specified, full plan is applied. For VirtualMachines plan, available sub plans are \"P1\" & \"P2\", where for resource level only \"P1\" sub plan is supported."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "workspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. The full resource Id of the Log Analytics workspace to save the data in."
      }
    },
    "workspaceScope": {
      "type": "string",
      "metadata": {
        "description": "Required. All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope."
      }
    },
    "autoProvision": {
      "type": "string",
      "defaultValue": "On",
      "allowedValues": [
        "On",
        "Off"
      ],
      "metadata": {
        "description": "Optional. Describes what kind of security agent provisioning action to take. - On or Off."
      }
    },
    "deviceSecurityGroupProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Device Security group data."
      }
    },
    "ioTSecuritySolutionProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Security Solution data."
      }
    },
    "pricings": {
      "$ref": "#/definitions/pricingsType",
      "metadata": {
        "description": "Optional. Pricing data."
      }
    },
    "securityContactProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Security contact data."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location deployment metadata."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[take(format('46d3xbcp.ptn.security-securitycenter.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4)), 64)]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "autoProvisioningSettings": {
      "type": "Microsoft.Security/autoProvisioningSettings",
      "apiVersion": "2017-08-01-preview",
      "name": "default",
      "properties": {
        "autoProvision": "[parameters('autoProvision')]"
      }
    },
    "deviceSecurityGroups": {
      "condition": "[not(empty(parameters('deviceSecurityGroupProperties')))]",
      "type": "Microsoft.Security/deviceSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "deviceSecurityGroups",
      "properties": {
        "thresholdRules": "[parameters('deviceSecurityGroupProperties').thresholdRules]",
        "timeWindowRules": "[parameters('deviceSecurityGroupProperties').timeWindowRules]",
        "allowlistRules": "[parameters('deviceSecurityGroupProperties').allowlistRules]",
        "denylistRules": "[parameters('deviceSecurityGroupProperties').denylistRules]"
      }
    },
    "securityContacts": {
      "condition": "[not(empty(parameters('securityContactProperties')))]",
      "type": "Microsoft.Security/securityContacts",
      "apiVersion": "2023-12-01-preview",
      "name": "default",
      "properties": {
        "emails": "[parameters('securityContactProperties').emails]",
        "isEnabled": "[parameters('securityContactProperties').isEnabled]",
        "notificationsByRole": "[parameters('securityContactProperties').notificationsByRole]",
        "notificationsSources": "[parameters('securityContactProperties').notificationSources]",
        "phone": "[parameters('securityContactProperties').phone]"
      }
    },
    "workspaceSettings": {
      "type": "Microsoft.Security/workspaceSettings",
      "apiVersion": "2017-08-01-preview",
      "name": "default",
      "properties": {
        "workspaceId": "[parameters('workspaceResourceId')]",
        "scope": "[parameters('workspaceScope')]"
      },
      "dependsOn": [
        "autoProvisioningSettings"
      ]
    },
    "pricing": {
      "copy": {
        "name": "pricing",
        "count": "[length(coalesce(parameters('pricings'), createArray()))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}-{2}', uniqueString(deployment().name), coalesce(parameters('pricings'), createArray())[copyIndex()].name, copyIndex())]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[coalesce(parameters('pricings'), createArray())[copyIndex()].name]"
          },
          "extensions": {
            "value": "[tryGet(coalesce(parameters('pricings'), createArray())[copyIndex()], 'extensions')]"
          },
          "pricingTier": {
            "value": "[tryGet(coalesce(parameters('pricings'), createArray())[copyIndex()], 'pricingTier')]"
          },
          "subPlan": {
            "value": "[tryGet(coalesce(parameters('pricings'), createArray())[copyIndex()], 'subPlan')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "18046318056173069445"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The pricing name. Use \"az security pricing list\" to find the latest list of pricing names."
              }
            },
            "pricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Standard",
                "Free"
              ],
              "metadata": {
                "description": "Optional. List of extensions offered under a plan."
              }
            },
            "extensions": {
              "type": "array",
              "nullable": true,
              "metadata": {
                "description": "Optional. List of extensions offered under a plan."
              }
            },
            "subPlan": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Optional. The sub-plan selected for a Standard pricing configuration, when more than one sub-plan is available. Each sub-plan enables a set of security features. When not specified, full plan is applied. For VirtualMachines plan, available sub plans are \"P1\" & \"P2\", where for resource level only \"P1\" sub plan is supported."
              }
            }
          },
          "resources": {
            "pricing_values": {
              "type": "Microsoft.Security/pricings",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "properties": {
                "extensions": "[parameters('extensions')]",
                "pricingTier": "[parameters('pricingTier')]",
                "subPlan": "[parameters('subPlan')]"
              }
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the deployed Pricing."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed Pricing."
              },
              "value": "[subscriptionResourceId('Microsoft.Security/pricings', parameters('name'))]"
            }
          }
        }
      }
    },
    "iotSecuritySolutions": {
      "condition": "[not(empty(parameters('ioTSecuritySolutionProperties')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-ASC-IotSecuritySolutions', uniqueString(deployment().name))]",
      "resourceGroup": "[if(empty(parameters('ioTSecuritySolutionProperties')), 'dummy', parameters('ioTSecuritySolutionProperties').resourceGroup)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ioTSecuritySolutionProperties": {
            "value": "[parameters('ioTSecuritySolutionProperties')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "11308208185474356622"
            }
          },
          "parameters": {
            "ioTSecuritySolutionProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Security Solution data."
              }
            }
          },
          "resources": [
            {
              "condition": "[not(empty(parameters('ioTSecuritySolutionProperties')))]",
              "type": "Microsoft.Security/iotSecuritySolutions",
              "apiVersion": "2019-08-01",
              "name": "iotSecuritySolutions",
              "properties": {
                "workspace": "[parameters('ioTSecuritySolutionProperties').workspace]",
                "displayName": "[parameters('ioTSecuritySolutionProperties').displayName]",
                "status": "[parameters('ioTSecuritySolutionProperties').status]",
                "export": "[parameters('ioTSecuritySolutionProperties').export]",
                "disabledDataSources": "[parameters('ioTSecuritySolutionProperties').disabledDataSources]",
                "iotHubs": "[parameters('ioTSecuritySolutionProperties').iotHubs]",
                "userDefinedResources": "[parameters('ioTSecuritySolutionProperties').userDefinedResources]",
                "recommendationsConfiguration": "[parameters('ioTSecuritySolutionProperties').recommendationsConfiguration]"
              }
            }
          ]
        }
      }
    }
  },
  "outputs": {
    "workspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the used log analytics workspace."
      },
      "value": "[parameters('workspaceResourceId')]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the security center."
      },
      "value": "Security"
    }
  }
}